# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the nightly branch
  push:
    branches: [ nightly ]
  pull_request:
    branches: [ nightly ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains three jobs that build on each operating system
  Build_Linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          sudo apt-get install libvlc-bin
          sudo apt-get install vlc-bin
          haxelib setup ~/haxelib
          haxelib install hxcpp
          haxelib install lime
          haxelib install openfl
          haxelib --never install flixel
          haxelib run lime setup flixel
          haxelib run lime setup
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install flixel-addons
          haxelib install tjson
          haxelib install hxjsonast
          haxelib install hxCodec
          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit
          haxelib install hscript
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hxcpp-debug-server
          haxelib list
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Apply Patches For Video
        run: bash linuxstup.sh
      - name: Compile
        run: haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: AE-Linux
          path: 'export/release/linux/bin'
  Build_Windows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp
          haxelib install lime
          haxelib install openfl
          haxelib --never install flixel
          haxelib run lime setup flixel
          haxelib run lime setup
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install flixel-addons
          haxelib install tjson
          haxelib install hxjsonast
          haxelib install hxCodec
          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit
          haxelib install hscript
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hxcpp-debug-server
          haxelib list
        shell: cmd
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: AE-Windows
          path: export/release/windows/bin
  Build_Windows32:
    runs-on: windows-latest
        
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2.3.0
        
        - uses: krdlab/setup-haxe@master
          with:
            haxe-version: 4.2.5
        # Runs a set of commands using the runners shell
        - name: Install Haxelib
          run: |
            haxelib setup C:/haxelib
            haxelib install hxcpp
            haxelib install lime
            haxelib install openfl
            haxelib --never install flixel
            haxelib run lime setup flixel
            haxelib run lime setup
            haxelib install flixel-tools
            haxelib install flixel-ui
            haxelib install flixel-addons
            haxelib install tjson
            haxelib install hxjsonast
            haxelib install hxCodec
            haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit
            haxelib install hscript
            haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
            haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
            haxelib install hxcpp-debug-server
            haxelib list
          shell: cmd
        - name: Create Version Tag
          run: echo "${{github.run_id}}" > VERSION
        - name: Compile
          run: haxelib run lime build windows -32 -release -D 32bits --app-version="4.0.0-${{ github.run_id}}"
        - name: Publish Artifact
          uses: actions/upload-artifact@v2.2.4
          with:
            name: AE-Windows-32bit
            path: export/release/windows/bin
  Build_Mac:
    runs-on: macos-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp
          haxelib install lime
          haxelib install openfl
          haxelib --never install flixel
          haxelib run lime setup flixel
          haxelib run lime setup
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install flixel-addons
          haxelib install tjson
          haxelib install hxjsonast
          haxelib install hxCodec
          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit
          haxelib install hscript
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hxcpp-debug-server
          haxelib list
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: AE-Mac
          path: export/release/macos/bin
